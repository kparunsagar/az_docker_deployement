# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'BFSI_LGI_DevOps_Training_POC(f3f0b402-1498-4537-9728-704a780011a01)'
        azureContainerRegistry: '{"loginServer":"arunregistry.azurecr.io", "id" : "/subscriptions/f3f0b402-1498-4537-9728-704a780011a01/resourceGroups/Arun_RG/providers/Microsoft.ContainerRegistry/registries/Arunregistry"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run services'
    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'BFSI_LGI_DevOps_Training_POC(f3f0b402-1498-4537-9728-704a780011a01)'
        azureContainerRegistry: '{"loginServer":"arunregistry.azurecr.io", "id" : "/subscriptions/f3f0b402-1498-4537-9728-704a780011a01/resourceGroups/Arun_RG/providers/Microsoft.ContainerRegistry/registries/Arunregistry"}'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Push services'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(agent.builddirectory)'
        Contents: '**/target/*.?(jar)'
        TargetFolder: '$(build.artifactstagingdirectory)'
    
    - upload : $(Build.ArtifactStagingDirectory)
      artifact: drop
